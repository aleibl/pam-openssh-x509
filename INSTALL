Contents of this file
---------------------
 
 * Introduction
 * Solution stack
 * Prerequisites
 * syslog-ng
 * OpenSSH
 * OpenLDAP
 * pam_openssh_x509
 * PuTTY-CAC 0.62
 * Trusted CA's store
 * Overview


Introduction
------------

This file describes how to setup an environment from scratch to get familiar with
pam_openssh_x509. Note that in a productive environment some steps would be done
automatically like the creation and distribution of x509 certificates. Also some
components like the LDAP server, logging facility or SSH client doesnt need to be
the same implementations as used here. For a fast setup The 'samples' directory
included in the release holds configurations needed for the installation steps.
Make sure that when copying setup instructions below the path are relative to the
root directory of the release. All steps have been tested on a Raspberry PI running
Arch Linux. Pathes might be wrong for other distributions.


Solution stack
--------------

 * syslog-ng 3.5.6
 * PAM 0.83
 * OpenSSL >= 1.0.1j
 * OpenSSH >= 6.2
 * libldap 2.4.40
 * OpenLDAP 2.4.40
 * libConfuse 2.7
 * pam_openssh_x509
 * PuTTY-CAC 0.62
 * check >= 0.9.10


Prerequisites
-------------

Make sure there is a local user 'pam_openssh_x509_test_user'


syslog-ng
---------

1) Install syslog-ng

2) Create directories for log files
$ mkdir /var/log/ssh
$ mkdir /var/log/slapd

3) Copy config
$ cp samples/syslog-ng.conf /etc/syslog-ng/


OpenSSH
-------

1) Install OpenSSH with PAM support

2) We are running a second instance of OpenSSH here in order to fall back
to the standard one without pam_openssh_x509 support. Configuration goes
to a new directory
$ mkdir /usr/local/etc/ssh

3) Copy sshd_config
$ cp samples/sshd_config /usr/local/etc/ssh/

4) Create directory for users public keys
$ mkdir /usr/local/etc/ssh/keystore

In this directory every user gets a subdirectory named after his uid and
the authorized_keys file will be stored there

5) Create keystore for 'pam_openssh_x509_test_user'
$ mkdir /usr/local/etc/ssh/keystore/pam_openssh_x509_test_user

/!\ As the authorized_keys file will be managed by pam_openssh_x509 we have
to make sure that noone expect root can change the authorized_keys file.
Standard permissions (755) with ownership root:root should be fine.

7) Run OpenSSH
$ /usr/bin/sshd -f /usr/local/etc/ssh/sshd_config

8) (optional) Make sure PAM support is disabled for other OpenSSH instances
running on the same machine as they would use the modules as well


OpenLDAP
--------

1) Install OpenLDAP

2) Perform the following steps:
$ rm -f /etc/openldap/slapd.conf
$ mkdir '/var/lib/openldap/dc=ssh,dc=hq'
$ mv /var/lib/openldap/openldap-data/DB_CONFIG.example /var/lib/openldap/dc\=ssh\,dc\=hq/DB_CONFIG
$ rm -rf /var/lib/openldap/openldap-data/
$ mkdir /run/openldap

3) Create new suffix
$ slapadd -l samples/slapd.ldif -F /etc/openldap/slapd.d/ -n0 

4) Start OpenLDAP server
$ /usr/bin/slapd

5) Create initial directory structure
$ ldapadd -h localhost -p 389 -D cn=directory_manager,dc=ssh,dc=hq -w test123 -f samples/pam_openssh_x509_test_initial.ldif

DIT layout:
dn: dc=ssh,dc=hq
dn: ou=groups,dc=ssh,dc=hq
dn: ou=people,dc=ssh,dc=hq

The groups tree will hold objects that represent the OpenSSH servers whereas the person
tree holds the person objects including their x509 certificates.

6) Add user 'pam_openssh_x509_test_user' with x509 certificate to person tree
$ ldapadd -h localhost -p 389 -D cn=directory_manager,dc=ssh,dc=hq -w test123 -f samples/pam_openssh_x509_test_add_user.ldif

7) Add OpenSSH server with identifier 'pam_openssh_x509_test_server' to groups tree
$ ldapadd -h localhost -p 389 -D cn=directory_manager,dc=ssh,dc=hq -w test123 -f samples/pam_openssh_x509_test_add_server.ldif

8) Grant user 'pam_openssh_x509_test_user' access to OpenSSH server with the identifier 'pam_openssh_x509_test_server'
$ ldapmodify -h localhost -p 389 -D cn=directory_manager,dc=ssh,dc=hq -w test123 -f samples/pam_openssh_x509_test_authorize_user.ldif

9) Check LDAP content
$ ldapsearch -LLL -h localhost -p 389 -D cn=directory_manager,dc=ssh,dc=hq -w test123 -b dc=ssh,dc=hq objectclass=*
dn: dc=ssh,dc=hq
objectClass: top
objectClass: dcObject
objectClass: organization
dc: ssh
o: ssh headquarter

dn: ou=people,dc=ssh,dc=hq
objectClass: top
objectClass: organizationalUnit
ou: people

dn: ou=groups,dc=ssh,dc=hq
objectClass: top
objectClass: organizationalUnit
ou: groups

dn: uid=pam_openssh_x509_test_user,ou=people,dc=ssh,dc=hq
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
uid: pam_openssh_x509_test_user
givenName: pam_openssh_x509_test_user
sn: pam_openssh_x509_test_user
cn: pam_openssh_x509_test_user
userCertificate;binary:: MIIC+DCCAeACAQUwDQYJKoZIhvcNAQEEBQAwQjEXMBUGA1UEAwwOM
 DEtY2FfaW50X3VzZXIxEzARBgoJkiaJk/IsZAEZFgNzc2gxEjAQBgoJkiaJk/IsZAEZFgJocTAgFw
 0xNTA1MDExMzI4NThaGA8yMTE1MDQwNzEzMjg1OFowQDEVMBMGA1UEAwwMMTAtZWVfdXNlcl8xMRM
 wEQYKCZImiZPyLGQBGRYDc3NoMRIwEAYKCZImiZPyLGQBGRYCaHEwggEiMA0GCSqGSIb3DQEBAQUA
 A4IBDwAwggEKAoIBAQCc+okstYDdj/8vRvZyk1CJI7bWGBnm0KFRQO6yJOIPbVAMM0VwUE0FKRfBR
 iH+JL+q3UMVu3dOt8RpEp6LKIwfr02PrtIGm/ge3epe1v1cvFEHC+UKfyPg5dFUorHrh32w6TkMWI
 IDJ4N+Q3itv/uQH7Yc86wq2HKXDyMAOlnSI/NWk9kbC3azAq+ZWZgS63IPUb4sR+3dJPcXsVjTAk7
 ax9xM5wm2oPvaRCKGWqCMQOULHwoPQweqhvRwuzBxdKPfPc51f+O8dzbrwtZ2OdChZYNdQ3KT0vDX
 hZSWgv98zTeJpitYGQSG0KNRbsed6gb+TEQIccbEbbsbZqgTFp9fAgMBAAEwDQYJKoZIhvcNAQEEB
 QADggEBABsHpeqpFlwvk0/cJZVPuz8nlEyX95gFBUui2MEBUL8zu5YSk4xSsuEp755MBydVigroPW
 DkdzUQsaTNZ5OGgB4/AM2owBhQFO0buso1OtgOfAEPoQ3W2+GzQvYJhjmfxIf+U4/IiTXAADUuoIo
 xKjeIwG9WOuO0L2L3fwHPipdirE1p9XjZxgv0P6/IOy+IyoGlvCDi3M7whIMC8abc5v0A1LSqntqZ
 LWtG6aEn4sIl16ro/spdVpGJk29hNIP5c/Nxtjm07hC+Fkww9SfZ0BPQObMWsxg2EEYHIgQJlb1VE
 HdHeglYV3b5uA41vQjJ/os12S0fvfh9EK5ZWYlY6Bs=

dn: cn=pam_openssh_x509_test_server,ou=groups,dc=ssh,dc=hq
objectClass: top
objectClass: groupOfNames
cn: pam_openssh_x509_test_server
description: pam_openssh_x509_test_server
member: uid=__LAST_MAN_STANDING__
member: uid=pam_openssh_x509_test_user,ou=people,dc=ssh,dc=hq

$ ldapsearch -LLL -h localhost -p 389 -D cn=directory_manager,dc=ssh,dc=hq -w test123 -b ou=people,dc=ssh,dc=hq uid=pam_openssh_x509_test_user memberOf
dn: uid=pam_openssh_x509_test_user,ou=people,dc=ssh,dc=hq
memberOf: cn=pam_openssh_x509_test_server,ou=groups,dc=ssh,dc=hq

pam_openssh_x509
----------------

1) Build and install modules
$ ./configure --libdir=/lib/security --disable-dependency-tracking
$ make
$ make check
$ su
$ make install

2) Copy pam_openssh_x509 configuration file
$ cp samples/pam_openssh_x509.conf /usr/local/etc/ssh/

3) Copy PAM configuration
$ cp -i samples/sshd /etc/pam.d/


PuTTY-CAC
---------

Connect to OpenSSH server using the private key in 10-ee_user_1_key.pem
(In production use the private key inside the Smartcard for signing)


Trusted CA's store
------------------

1) Create directory where trusted CA's shall be kept
$ mkdir /usr/local/etc/ssh/cacerts

2) Copy whole CA trust chain
$ cp samples/00-ca_root_cert.pem /usr/local/etc/ssh/cacerts
$ cp samples/01-ca_int_user_cert.pem /usr/local/etc/ssh/cacerts 

3) Create symlink hashes
$ c_rehash /usr/local/etc/ssh/cacerts


Overview
--------

Log files:
/var/log/ssh/sshd_5580.log
/var/log/ssh/pam_openssh_x509.log
/var/log/slapd/slapd.log

Keystore:
/usr/local/etc/ssh/keystore/

Configurations:
/usr/local/etc/ssh/sshd_config
/usr/local/etc/ssh/pam_openssh_x509.conf
/etc/pam.d/sshd
/etc/syslog-ng/syslog-ng.conf

#EOF
